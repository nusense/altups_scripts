#! /usr/bin/env bash
whatami=genie_build.sh

# Assumes UPS setup genie has happened
if [ "x${GENIE_DIR}" == "x" ] ; then
  echo genie has not been setup
  exit
fi

doclean=no
doconfig=no
domake=no
doinstall=no
doclean2=no
verbose=no
doopt=no
doextras=""
#dovle=yes
dolowlevel=no
targets="all"
compiler="gcc"
dolhapdf5=no
dolhapdf6=yes
pythiaMajor=6  # or 8  -- 7 means both enbled

dog4=no
doincl=no
doprof=no
skipbdm=no

#=============== usage
usage() {
  echo "Usage: ${whatami}              " >&2
  echo "   -c:         clean (before)      [$doclean]   " >&2
  echo "   -C:         configure           [$doconfig]  " >&2
  echo "   -m:         make genie          [$domake]    " >&2
  echo "   -i:         install genie       [$doinstall] " >&2
  echo "   -2:         clean (after)       [$doclean2]  " >&2
  echo "   -v:         verbose             [$doverbose] " >&2
  echo "   --opt       optimized           [$doopt]     " >&2
  echo "   --extras    other subpkg        [$doextras]  " >&2
  echo "                e.g. test,masterclass,t2k       " >&2
  echo "   --lowlevl: lowlevel-mesg       [$dolowlevel]" >&2
  echo "   --targets=<target>              [$targets]   " >&2
  echo "   --with-compiler: gcc/clang      [$compiler]  " >&2
  echo "   --enable-geant4:                [$dog4]      " >&2
  echo "   --enable-incl:                  [$doincl]    " >&2
  echo "   --enable-lhapdf5                [$dolhapdf5] " >&2
  echo "   --enable-lhapdf6                [$dolhapdf6] " >&2
  echo "   --pythia-major                  [$pythiaMajor] " >&2
  echo "   --disable-bdm                   [$skipbdm]   " >&2
  echo "   --enable-professor              [$doprof]    " >&2
  return 1
}

#=============== command line arg parsing
GSPLOAD_SAVE=$GSPLOAD
here=`pwd`

TEMP=`getopt -n ${whatami} -s bash -a --longoptions="help clean config make install clean2 opt vle vhe no-vle no-vhe lowlevel extras:: targets: with-compiler: geant4:: enable-geant4:: incl:: enable-incl:: enable-inclxx:: enable-lhapdf5:: enable-lhapdf6:: pythia-major: disable-bdm enable-professor::" -o ?hcClmi2fesv -- "$@"`

if [ $? != 0 ] ; then
  echo "Usage: ${whatami} [-c] [-C] " >&2
fi
eval set -- "${TEMP}"
#echo "TEMP=${TEMP}"
#echo "\$*=$*"
#echo "\$@=${@}"
unset TEMP
while true; do

  echo "\$1='$1' \$2='$2'"
  case "$1" in
    -h | --help     ) usage ;    exit;;
    -c | --clean    ) doclean=yes    ;;
    -C | --config   ) doconfig=yes   ;;
    -m | --make     ) domake=yes     ;;
    -i | --install  ) doinstall=yes     ;;
    -2 | --clean2   ) doclean2=yes     ;;
    -v              ) verbose=yes    ;;
    --opt           ) doopt=yes      ;;
#    --vle           ) dovle=yes      ;;
#    --no-vle        ) dovle=no       ;;
    --lowlevel      ) dolowlevel=yes ;;
    --targets       ) targets="$2"
                      shift
                      ;;
    --with-compiler ) compiler="$2"
                      shift
                      ;;
# optional arg, ie. --flag:: (double ::) will get a '' pushed in after them
# by getopt ... still need to remove it with a shift
    --extras        ) doextras="$2";
                      if [ "x${doextras}" == "x" ]; then
                         doextras="test,masterclass,t2k,event-library" #"evtlib,"
                      fi
                      shift
                      ;;
    --*geant4       ) dog4="$2" ;
                      if [ "x${dog4}" == "x" ]; then
                         dog4=yes
                      fi
                      shift
                      ;;
    --*incl*        ) doincl="$2" ;
                      if [ "x${doincl}" == "x" ]; then
                        doincl=yes
                      fi
                      shift
                      ;;
    --enable-lhapdf5 ) dolhapdf5="$2"
                      if [ "x${dolhapdf5}" == "x" ]; then
                        dolhapdf5=yes
                      fi
                      echo "enable-lhapdf5 set dolhapdf5=${dolhapdf5}"
                      shift
                      ;;
    --enable-lhapdf6 ) dolhapdf6="$2"
                      if [ "x${dolhapdf6}" == "x" ]; then
                        dolhapdf6=yes
                      fi
                      echo "enable-lhapdf6 set dolhapdf6=${dolhapdf6}"
                      shift
                      ;;
    --pythia-major ) pythiaMajor="$2"
                     if [ $pythiaMajor -ge 6 -a $pythiaMajor -le 8 ]; then
                       # 6 = 6-only, 8 = 8-only, 7=both
                       echo "using major pythia version: $pythiaMajor"
                     else
                       echo -e "${OUTRED}major pythia version: $pythiaMajor ${OUTNOCOL}"
                       echo -e "${OUTRED}NOT SUPPORTED${OUTNOCOL}"
                       exit 1
                     fi
                     shift
                     ;;
    --disable-bdm   ) skipbdm="yes" ;;
    --enable-professor ) doprof="$2"
                         if [ "x${doprof}" == "x" ]; then
                           doprof=yes
                         fi
                         echo "enable-professor set doprof=${doprof}"
                         shift
                         ;;
    --              ) shift ;   break ;;
    *               ) echo "===> unknown arg '$1'"
  esac
  # echo "do shift arg1"
  shift # eat the arg we just processed
done

if [ "$verbose" == "yes" ]; then
  ECHOCMD="echo"
else
  ECHOCMD="# echo"
fi

echo doclean=${doclean} doconfig=${doconfig} domake=${domake}
echo doinstall=${doinstall} doclean2=${doclean2}
echo dolowlevel=${dolowlevel} compiler=${compiler}
echo dog4=${dog4} doincl=${doincl}
echo dolhapdf5=${dolhapdf5} dolhapdf6=${dolhapdf6}
echo pythiaMajor=${pythiaMajor}
echo skipbdm=${skipbdm}
echo doprof=${doprof}
#echo dovle=${dovle}

eval $ECHOCMD cd `dirname $GENIE`
cd `dirname $GENIE`
eval $ECHOCMD export genie_rel=`basename $GENIE`
export genie_rel=`basename $GENIE`

echo "========= genie release: \"${genie_rel}\" "

unset MAKEFILE MAKEFLAG MAKEFILES MAKEFLAGS
if [ ! -d ${GENIE_REWEIGHT} ]; then
  echo "no reweight directory ..."
else
  export GENIE_REWEIGHT_INSTALLATION_PATH=${GENIE_FQ_DIR}
  echo export GENIE_REWEIGHT_INSTALLATION_PATH=${GENIE_FQ_DIR}
fi

if [ ! -d ${GENIE} ] ; then
  mkdir ${GENIE}
fi

cd ${GENIE}
if [ "x${GSPLINE_DIR}" != "x" ] ; then
  if [ ! -d ${GSPLINE_DIR} ] ; then
    mkdir ${GSPLINE_DIR}
  fi
fi

#=============== need to distclean before building if install
if [[ "x${doinstall}" == "xyes" ]] ; then
   cd $GENIE
   echo make distclean genie
   make distclean > do_distclean_genie.log_save 2>&1
   if [ ! -d ${GENIE_REWEIGHT} ]; then
     echo "no reweight directory ..."
   else
     cd $GENIE_REWEIGHT
     echo make distclean reweight
     make distclean > do_distclean_reweight.log_save 2>&1
   fi
   cd $GENIE
fi

#=============== clean (beforehand)
if [[ "x${doclean}" == "xyes" ]] ; then
   cd $GENIE
   echo make clean genie
   make clean > do_clean_genie_before.log_save 2>&1
   if [ ! -d ${GENIE_REWEIGHT} ]; then
     echo "no reweight directory ..."
   else
     cd $GENIE_REWEIGHT
     echo make clean reweight
     make clean > do_clean_reweight_before.log_save 2>&1
   fi
   cd $GENIE
fi

#=============== configure
config_status=0
if [[ "x${doconfig}" == "xyes" ]] ; then
#

if [ "${dolhapdf5}" == "yes" -o "${dolhapdf6}" == "yes" ]; then
  export LHAPDF_LIB=${LHAPDF_FQ_DIR}/lib
  export LHAPDF_INC=${LHAPDF_FQ_DIR}/include
fi
export LIBXML2_INC=${LIBXML2_FQ_DIR}/include/libxml2
export LIBXML2_LIB=${LIBXML2_FQ_DIR}/lib
export LOG4CPP_INC=${LOG4CPP_FQ_DIR}/include
export LOG4CPP_LIB=${LOG4CPP_FQ_DIR}/lib

   MYPREFIX=${GENIE_FQ_DIR}
   setprefix="--prefix=${MYPREFIX}"
   if [  ! -d ${MYPREFIX} ]; then
     mkdir -p ${MYPREFIX}
   fi
#   minosstuff="--enable-minos-evserv"
   minosstuff="--enable-event-server --enable-numi --enable-fnal"
    novastuff=" "
#
   cfg=" $setprefix $minosstuff $novastuff"
   if [[ "x${compiler}" != "x" ]] ; then
     cfg="$cfg --with-compiler=${compiler}"
   fi
   if [[ "x${dolowlevel}" == "xyes" ]] ; then
     cfg="$cfg --enable-lowlevel-mesg"
   else
     cfg="$cfg --disable-lowlevel-mesg"
   fi
   if [[ "x${doprof}" == "xyes" ]] ; then
     cfg="$cfg --enable-professor2"
   fi
#   if [[ "x${dovle}" == "xyes" ]] ; then
#     cfg="$cfg --enable-vle-extension"
#   fi
#   cfg="$cfg --enable-nuvalidator --enable-neugen"
   cfg="$cfg --disable-gibuu --enable-flux-drivers --enable-geom-drivers"
#   cfg="$cfg --enable-doxygen --enable-test --enable-viewer"
#   cfg="$cfg --enable-mueloss"
   cfg="$cfg --enable-atmo --enable-rwght"
   cfg="$cfg --enable-nucleon-decay"
   cfg="$cfg --enable-nnbar-oscillation"
# install libGPhBDMXS.so
   if [[ "${skipbdm}" != "yes" ]] ; then
     cfg="$cfg --enable-boosted-dark-matter"
     cfg="$cfg --enable-neutral-heavy-lepton"
     cfg="$cfg --enable-dark-neutrino"
   fi
   cfg="$cfg --enable-dylibversion"
   if [[ "${doopt}" == "no" ]] ; then
     cfg="$cfg --enable-debug"
   else
     cfg="$cfg --with-optimiz-level=O3"
   fi

   if [[ -n "${doextras}" ]] ; then
     for subpkg in `echo ${doextras} | tr ",:;" "\n"`
     do
       cfg="$cfg --enable-${subpkg}"
       echo "--enable-${subpkg}"
     done
   fi

#   cfg="$cfg --with-cern-lib=$CERN_DIR/lib"
   if [ "${dolhapdf5}" == "yes" ]; then
     cfg="$cfg --enable-lhapdf5"
     cfg="$cfg --with-lhapdf5-inc=${LHAPDF_INC}"
     cfg="$cfg --with-lhapdf5-lib=${LHAPDF_LIB}"
   else
     cfg="$cfg --disable-lhapdf5"
   fi
   if [ "${dolhapdf6}" == "yes" ]; then
     cfg="$cfg --enable-lhapdf6"
     cfg="$cfg --with-lhapdf6-inc=${LHAPDF_INC}"
     cfg="$cfg --with-lhapdf6-lib=${LHAPDF_LIB}"
   else
     cfg="$cfg --disable-lhapdf6"
   fi

   if [ $pythiaMajor -eq 6 -o $pythiaMajor -eq 7 ]; then
     export PYTHIA6_DIR=${PYTHIA_FQ_DIR}
     if [ $pythiaMajor -eq 6 ]; then
       cfg="$cfg --disable-pythia8"
     fi
     cfg="$cfg --enable-pythia6"
     cfg="$cfg --with-pythia6-lib=$PYTHIA6_DIR/lib"
     cfg="$cfg --enable-gfortran"
#whichgf=`which gfortran`
#whichgfdir=`dirname $whichgf`
#     cfg="$cfg --with-gfortran-lib=$whichgfdir/../lib64"  # not lib
   fi
   if [ $pythiaMajor -eq 8 -o $pythiaMajor -eq 7 ]; then
     export PYTHIA8_DIR=${PYTHIA8_FQ_DIR}
     if [ $pythiaMajor -eq 8 ]; then
       cfg="$cfg --disable-pythia6"
     fi
     cfg="$cfg --enable-pythia8"
     cfg="$cfg --with-pythia8-inc=$PYTHIA8_DIR/include"
     cfg="$cfg --with-pythia8-lib=$PYTHIA8_DIR/lib"
   fi

   cfg="$cfg --with-libxml2-inc=${LIBXML2_INC} "
   cfg="$cfg --with-libxml2-lib=${LIBXML2_LIB}"
   cfg="$cfg --with-log4cpp-inc=${LOG4CPP_INC}"
   cfg="$cfg --with-log4cpp-lib=${LOG4CPP_LIB}"

  if [[ "x${dog4}" == "xyes" ]]; then
     echo "==========> configure for Geant4"
     export GEANT4_INC=${GEANT4_FQ_DIR}/include # not /Geant4
     export GEANT4_LIB=${GEANT4_FQ_DIR}/lib64

     cfg="$cfg --enable-geant4"
     cfg="$cfg --with-geant4-inc=${GEANT4_INC}"
     cfg="$cfg --with-geant4-lib=${GEANT4_LIB}"
  else
     echo "==========> NOT configured for Geant4"
  fi

  if [[ "x${doincl}" == "xyes" ]]; then
     echo "==========> configure for INCL++"
     if [ -n "${INCLXX_FQ_DIR}" ]; then
       export INCL_INC=${INCLXX_FQ_DIR}/include/inclxx
       export INCL_LIB=${INCLXX_FQ_DIR}/lib
     else
       export INCL_INC=${INCL_FQ_DIR}/include/inclxx
       export INCL_LIB=${INCL_FQ_DIR}/lib
     fi
     export BOOST_INC=${BOOST_FQ_DIR}/include
     export BOOST_LIB=${BOOST_FQ_DIR}/lib

     cfg="$cfg --enable-incl"
     cfg="$cfg --with-incl-inc=${INCL_INC}"
     cfg="$cfg --with-incl-lib=${INCL_LIB}"
     cfg="$cfg --with-boost-inc=${BOOST_INC}"
     cfg="$cfg --with-boost-lib=${BOOST_LIB}"
  else
     echo "==========> NOT configured for INCL++"
  fi

#   cfg="$cfg --enable-profiler --with-profiler-lib=$INSTALLATION/lib"
#   cfg="$cfg --with-log4cpp-inc=$LOG4CPP_DIR/include"
#   cfg="$cfg --with-log4cpp-lib=$LOG4CPP_DIR/lib"

   cd $GENIE
   echo ./configure $cfg
   rm -f do_configure.log_save
   echo ./configure $cfg > do_configure.log_save 2>&1
   echo " =============" >> do_configure.log_save 2>&1
   ./configure $cfg >> do_configure.log_save 2>&1
   config_status=$?

  if [[ ${config_status} -ne 0 ]]; then
    echo -e "${OUTRED}skip make step as config failed${OUTNOCOL}"
    echo -e "${OUTRED}skip make step as config failed${OUTNOCOL}" 1>&2
    exit ${config_status}
  fi

  echo "----> grep -i pythia src/make/Make.config"
  grep -i pythia src/make/Make.config
  echo "----> make autogenerated-headers e.g. $GENIE/src/Framework/Conventions/GBuild.h"
  cd $GENIE
  make autogenerated-headers
  cat $GENIE/src/Framework/Conventions/GBuild.h

fi

#=============== make
make_status=0
if [[ "x${domake}" == "xyes" ]] ; then

  cd $GENIE

  echo "genie: make $targets"
  make $targets > do_make.log_save 2>&1
  make_status_gen=$?
  echo "Generator \"make $targets\" completed with status $make_status_gen"
  grep error do_make.log_save

  if [ ! -d ${GENIE_REWEIGHT} ]; then
    echo "no reweight directory ..."
  else
    cd $GENIE_REWEIGHT
    export GENIE_REWEIGHT_INSTALLATION_PATH=${GENIE_FQ_DIR}

    echo "reweight: make"
    make > do_make.log_save 2>&1
    make_status_rwt=$?
    echo "Reweight \"make\" completed with status ${make_status_rwt}"
    grep error do_make.log_save
  fi
  let make_status=${make_status_gen}+${make_status_rwt}

  if [[ ${make_status} -ne 0 ]]; then
    echo -e "${OUTRED}skip install step as make failed${OUTNOCOL}"
    echo -e "${OUTRED}skip install step as make failed${OUTNOCOL}" 1>&2
    exit ${make_status}
  fi

fi

#=============== install
install_status=0
if [[ "x${doinstall}" == "xyes" ]] ; then

  cd $GENIE

  echo "genie: install"
  make install > do_install.log_save 2>&1
  isntall_status_gen=$?
  echo "Generator \"install\" completed with status $install_status_gen"
  grep error do_install.log_save

  if [ ! -d ${GENIE_REWEIGHT} ]; then
    echo "no reweight directory ..."
  else
    cd $GENIE_REWEIGHT
    echo "reweight: install"
    make install > do_install.log_save 2>&1
    install_status_rwt=$?
    echo "Reweight \"install\" completed with status ${make_status_rwt}"
    grep error do_install.log_save
  fi
  let make_status=${make_status_gen}+${make_status_rwt}

  if [[ ${install_status} -ne 0 ]]; then
    echo -e "${OUTRED}skip clean step as install failed${OUTNOCOL}"
    echo -e "${OUTRED}skip clean step as install failed${OUTNOCOL}" 1>&2
    exit ${make_status}
  fi

fi

#=============== clean (after install)
if [[ "x${doclean2}" == "xyes" ]] ; then
   cd $GENIE
   echo make clean genie after
   make clean > do_clean_genie_after_install.log_save 2>&1
   if [ ! -d ${GENIE_REWEIGHT} ]; then
     echo "no reweight directory ..."
   else
     cd $GENIE_REWEIGHT
     echo make clean reweight after
     make clean > do_clean_reweight_after_install.log_save 2>&1
   fi
   cd $GENIE
fi

#return 0
exit
